(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
var XML_ADDRESS = "https://www.tizen.org/blogs/feed", XML_METHOD = "GET", MSG_ERR_NODATA = "There is no news from tizen.org", MSG_ERR_NOTCONNECTED = "Connection aborted. Check your internet connection.", NUM_MAX_NEWS = 5, NUM_MAX_LENGTH_SUBJECT = 64, arrayNews = [], indexDisplay = 0, lengthNews = 0;
function emptyElement(elm) {
    if (elm)
        while (elm.firstChild) {
            elm.removeChild(elm.firstChild);
        }
    return elm;
}
//@ts-ignore The event is tiyen specific
function keyEventHandler(event) {
    if (event.keyName === "back") {
        try {
            //@ts-ignore Tizen declaration should be added
            if (tizen)
                tizen.application.getCurrentApplication().exit();
        }
        catch (ignore) { }
    }
}
function addTextElement(objElm, textClass, textContent) {
    var newElm = document.createElement("p");
    newElm.className = textClass;
    newElm.appendChild(document.createTextNode(textContent));
    if (objElm)
        objElm.appendChild(newElm);
}
function trimText(text, maxLength) {
    var trimmedString;
    if (text.length > maxLength) {
        trimmedString = text.substring(0, maxLength - 3) + "...";
    }
    else {
        trimmedString = text;
    }
    return trimmedString;
}
function showNews(index) {
    var objNews = document.querySelector("#area-news"), objPagenum = document.querySelector("#area-pagenum");
    emptyElement(objNews);
    addTextElement(objNews, "subject", arrayNews[index].title);
    emptyElement(objPagenum);
    addTextElement(objPagenum, "pagenum", "Page " + (index + 1) + "/" + lengthNews);
}
function showNextNews() {
    if (lengthNews > 0) {
        indexDisplay = (indexDisplay + 1) % lengthNews;
        showNews(indexDisplay);
    }
}
function getDataFromXML() {
    var objNews = document.querySelector("#area-news"), xmlhttp = new XMLHttpRequest(), xmlDoc, dataItem, i;
    arrayNews = [];
    lengthNews = 0;
    indexDisplay = 0;
    emptyElement(objNews);
    xmlhttp.open(XML_METHOD, XML_ADDRESS, false);
    xmlhttp.onreadystatechange = function () {
        if (xmlhttp && xmlhttp.readyState === 4 && xmlhttp.status === 200) {
            xmlDoc = xmlhttp.responseXML;
            if (xmlDoc)
                dataItem = xmlDoc.getElementsByTagName("item");
            if (dataItem.length > 0) {
                lengthNews = (dataItem.length > NUM_MAX_NEWS) ? NUM_MAX_NEWS : dataItem.length;
                for (i = 0; i < lengthNews; i++) {
                    arrayNews.push({
                        title: dataItem[i].getElementsByTagName("title")[0].childNodes[0].nodeValue,
                        link: dataItem[i].getElementsByTagName("link")[0].childNodes[0].nodeValue
                    });
                    arrayNews[i].title = trimText(arrayNews[i].title, NUM_MAX_LENGTH_SUBJECT);
                }
                showNews(indexDisplay);
            }
            else {
                addTextElement(objNews, "subject", MSG_ERR_NODATA);
            }
            xmlhttp = null;
        }
        else {
            addTextElement(objNews, "subject", MSG_ERR_NOTCONNECTED);
        }
    };
    xmlhttp.send();
}
function setDefaultEvents() {
    //@ts-ignore This is a Tizen device specific event and should be defined
    document.addEventListener("tizenhwkey", keyEventHandler);
    const an = document.querySelector("#area-news");
    if (an)
        an.addEventListener("click", showNextNews);
}
function init() {
    setDefaultEvents();
    getDataFromXML();
}
window.onload = init;

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
